import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { i18n, type Locale } from "@/i18n/config";
import { cookies } from "next/headers";
import { DictionaryProvider } from "@/i18n/hooks/use-dictionary";
import "@/styles/globals.css";

const geistSans = Geist({
	variable: "--font-geist-sans",
	subsets: ["latin"],
});

const geistMono = Geist_Mono({
	variable: "--font-geist-mono",
	subsets: ["latin"],
});

export const metadata: Metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
};

export default async function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	const cookieStore = cookies();
	const lang =
		((await cookieStore).get("NEXT_LOCALE")?.value as Locale) ||
		i18n.defaultLocale;

	return (
		<html lang={lang}>
			<body
				className={`${geistSans.variable} ${geistMono.variable} antialiased`}
			>
				<DictionaryProvider>{children}</DictionaryProvider>
			</body>
		</html>
	);
}
